#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∏–ø–æ–≤ –Ω–∞—Ä—è–¥–æ–≤
"""

import requests
import time

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
API_BASE_URL = "http://localhost:8000/api"

def wait_for_api():
    """–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ API"""
    print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ API...")
    max_retries = 30
    for i in range(max_retries):
        try:
            response = requests.get(f"{API_BASE_URL.replace('/api', '')}/health", timeout=5)
            if response.status_code == 200:
                print("‚úÖ API –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
                return True
        except requests.exceptions.RequestException:
            pass
        print(f"   –ü–æ–ø—ã—Ç–∫–∞ {i+1}/{max_retries}...")
        time.sleep(2)
    
    print("‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
    return False

def create_duty_type(name, description, priority, people_per_day):
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–ø–∞ –Ω–∞—Ä—è–¥–∞"""
    data = {
        "name": name,
        "description": description,
        "priority": priority,
        "people_per_day": people_per_day
    }
    
    try:
        response = requests.post(f"{API_BASE_URL}/duty-types", json=data)
        if response.status_code == 200:
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–∏–ø –Ω–∞—Ä—è–¥–∞: {name} ({people_per_day} —á–µ–ª/—Å—É—Ç–∫–∏)")
            return response.json()
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∏–ø–∞ –Ω–∞—Ä—è–¥–∞ {name}: {response.text}")
            return None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∏–ø–∞ –Ω–∞—Ä—è–¥–∞ {name}: {e}")
        return None

def main():
    print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–ø–æ–≤ –Ω–∞—Ä—è–¥–æ–≤")
    print("=" * 40)
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ API
    if not wait_for_api():
        return
    
    # –¢–∏–ø—ã –Ω–∞—Ä—è–¥–æ–≤
    duty_types_data = [
        ("–î–µ–∂—É—Ä—Å—Ç–≤–æ –ø–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏", "–û–±—â–µ–µ –¥–µ–∂—É—Ä—Å—Ç–≤–æ –ø–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏", 1, 2),
        ("–î–µ–∂—É—Ä—Å—Ç–≤–æ –ø–æ IT", "–î–µ–∂—É—Ä—Å—Ç–≤–æ –≤ IT-–æ—Ç–¥–µ–ª–µ", 2, 1),
        ("–î–µ–∂—É—Ä—Å—Ç–≤–æ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏", "–î–µ–∂—É—Ä—Å—Ç–≤–æ –≤ –æ—Ç–¥–µ–ª–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏", 3, 3),
        ("–î–µ–∂—É—Ä—Å—Ç–≤–æ –ø–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤—É", "–î–µ–∂—É—Ä—Å—Ç–≤–æ –≤ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–º –æ—Ç–¥–µ–ª–µ", 2, 2),
        ("–î–µ–∂—É—Ä—Å—Ç–≤–æ –ø–æ –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏–∏", "–î–µ–∂—É—Ä—Å—Ç–≤–æ –≤ –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏–∏", 1, 1),
        ("–î–µ–∂—É—Ä—Å—Ç–≤–æ –ø–æ –∫–∞–¥—Ä–∞–º", "–î–µ–∂—É—Ä—Å—Ç–≤–æ –≤ –æ—Ç–¥–µ–ª–µ –∫–∞–¥—Ä–æ–≤", 1, 1),
        ("–î–µ–∂—É—Ä—Å—Ç–≤–æ –ø–æ –æ—Ö—Ä–∞–Ω–µ", "–î–µ–∂—É—Ä—Å—Ç–≤–æ –ø–æ –æ—Ö—Ä–∞–Ω–µ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏", 4, 4),
        ("–î–µ–∂—É—Ä—Å—Ç–≤–æ –ø–æ —Å–≤—è–∑–∏", "–î–µ–∂—É—Ä—Å—Ç–≤–æ –ø–æ —Å–≤—è–∑–∏ –∏ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è–º", 2, 1)
    ]
    
    print("\nüéØ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–ø–æ–≤ –Ω–∞—Ä—è–¥–æ–≤...")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–ø–æ–≤ –Ω–∞—Ä—è–¥–æ–≤
    created_count = 0
    for name, description, priority, people_per_day in duty_types_data:
        duty_type = create_duty_type(name, description, priority, people_per_day)
        if duty_type:
            created_count += 1
    
    print(f"\nüéâ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("=" * 40)
    print(f"üìä –°–æ–∑–¥–∞–Ω–æ —Ç–∏–ø–æ–≤ –Ω–∞—Ä—è–¥–æ–≤: {created_count}")
    
    print("\nüåê –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000/duty-types –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞")

if __name__ == "__main__":
    main() 