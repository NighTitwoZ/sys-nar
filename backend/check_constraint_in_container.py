#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
"""

import asyncio
from database import engine
from sqlalchemy import text

async def check_constraint():
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        async with engine.begin() as conn:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
            result = await conn.execute(text("""
                SELECT constraint_name, table_name, column_name
                FROM information_schema.table_constraints 
                WHERE constraint_name = 'duty_types_name_key' 
                AND table_name = 'duty_types';
            """))
            
            constraints = result.fetchall()
            
            if constraints:
                print("‚ùå –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –í–°–ï –ï–©–ï –°–£–©–ï–°–¢–í–£–ï–¢!")
                for row in constraints:
                    print(f"   –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ: {row[0]}")
                    print(f"   –¢–∞–±–ª–∏—Ü–∞: {row[1]}")
                    print(f"   –ö–æ–ª–æ–Ω–∫–∞: {row[2]}")
                
                # –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ
                print("\nüîß –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è...")
                await conn.execute(text("""
                    ALTER TABLE duty_types DROP CONSTRAINT IF EXISTS duty_types_name_key;
                """))
                print("‚úÖ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ!")
                
            else:
                print("‚úÖ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –ù–ï –ù–ê–ô–î–ï–ù–û!")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")

if __name__ == "__main__":
    asyncio.run(check_constraint()) 