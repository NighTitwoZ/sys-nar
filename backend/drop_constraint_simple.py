#!/usr/bin/env python3
"""
–£–ø—Ä–æ—â–µ–Ω–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏
"""

import asyncio
from database import engine
from sqlalchemy import text

async def drop_constraint():
    print("üîß –£–¥–∞–ª–µ–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏...")
    
    try:
        async with engine.begin() as conn:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ
            print("1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è...")
            result = await conn.execute(text("""
                SELECT constraint_name
                FROM information_schema.table_constraints 
                WHERE constraint_name = 'duty_types_name_key' 
                AND table_name = 'duty_types';
            """))
            
            constraints = result.fetchall()
            
            if constraints:
                print("‚ùå –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –ù–ê–ô–î–ï–ù–û!")
                for row in constraints:
                    print(f"   –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ: {row[0]}")
                
                # –£–¥–∞–ª—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ
                print("\n2Ô∏è‚É£ –£–¥–∞–ª–µ–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è...")
                await conn.execute(text("""
                    ALTER TABLE duty_types DROP CONSTRAINT IF EXISTS duty_types_name_key;
                """))
                print("‚úÖ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ!")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ
                print("\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è...")
                result = await conn.execute(text("""
                    SELECT constraint_name
                    FROM information_schema.table_constraints 
                    WHERE constraint_name = 'duty_types_name_key' 
                    AND table_name = 'duty_types';
                """))
                
                constraints_after = result.fetchall()
                
                if not constraints_after:
                    print("‚úÖ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ!")
                else:
                    print("‚ùå –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –≤—Å–µ –µ—â–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
                    
            else:
                print("‚úÖ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –ù–ï –ù–ê–ô–î–ï–ù–û!")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(drop_constraint()) 