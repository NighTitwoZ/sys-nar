# –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–∞—Ä—è–¥–æ–≤

Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã..." -ForegroundColor Cyan

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
Write-Host "`nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..." -ForegroundColor Yellow
try {
    $dockerVersion = docker --version
    Write-Host "‚úÖ Docker: $dockerVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –Ω–µ –∑–∞–ø—É—â–µ–Ω" -ForegroundColor Red
    Write-Host "   –ó–∞–ø—É—Å—Ç–∏—Ç–µ Docker Desktop –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É" -ForegroundColor Yellow
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
Write-Host "`nüê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose..." -ForegroundColor Yellow
try {
    $composeVersion = docker-compose --version
    Write-Host "‚úÖ Docker Compose: $composeVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
Write-Host "`nüöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..." -ForegroundColor Yellow
try {
    $containers = docker-compose ps
    Write-Host "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:" -ForegroundColor Cyan
    Write-Host $containers
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤" -ForegroundColor Red
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
Write-Host "`nüîå –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤..." -ForegroundColor Yellow

$ports = @(3000, 8000, 5432, 6379)
foreach ($port in $ports) {
    try {
        $connection = Test-NetConnection -ComputerName localhost -Port $port -InformationLevel Quiet
        if ($connection) {
            Write-Host "‚úÖ –ü–æ—Ä—Ç $port –æ—Ç–∫—Ä—ã—Ç" -ForegroundColor Green
        } else {
            Write-Host "‚ùå –ü–æ—Ä—Ç $port –∑–∞–∫—Ä—ã—Ç" -ForegroundColor Red
        }
    } catch {
        Write-Host "‚ùå –ü–æ—Ä—Ç $port –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Red
    }
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
Write-Host "`nüåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..." -ForegroundColor Yellow

try {
    $response = Invoke-WebRequest -Uri "http://localhost:8000/health" -TimeoutSec 5
    if ($response.StatusCode -eq 200) {
        Write-Host "‚úÖ Backend API –¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Backend API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–∫–æ–¥: $($response.StatusCode))" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå Backend API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Red
}

try {
    $response = Invoke-WebRequest -Uri "http://localhost:3000" -TimeoutSec 5
    if ($response.StatusCode -eq 200) {
        Write-Host "‚úÖ Frontend –¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–∫–æ–¥: $($response.StatusCode))" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Red
}

Write-Host "`nüìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:" -ForegroundColor Cyan
Write-Host "‚Ä¢ –ï—Å–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã: docker-compose up -d" -ForegroundColor White
Write-Host "‚Ä¢ –ï—Å–ª–∏ –ø–æ—Ä—Ç—ã –∑–∞–Ω—è—Ç—ã: –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥—Ä—É–≥–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è" -ForegroundColor White
Write-Host "‚Ä¢ –ï—Å–ª–∏ —Å–µ—Ä–≤–∏—Å—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã: docker-compose logs" -ForegroundColor White
Write-Host "‚Ä¢ –î–ª—è –ø–æ–ª–Ω–æ–π –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏: docker-compose down -v && docker-compose up -d --build" -ForegroundColor White

Write-Host "`nüéØ –î–æ—Å—Ç—É–ø–Ω—ã–µ URL:" -ForegroundColor Cyan
Write-Host "‚Ä¢ Frontend: http://localhost:3000" -ForegroundColor White
Write-Host "‚Ä¢ Backend API: http://localhost:8000" -ForegroundColor White
Write-Host "‚Ä¢ API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs" -ForegroundColor White
Write-Host "‚Ä¢ Health check: http://localhost:8000/health" -ForegroundColor White 